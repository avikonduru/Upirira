{"version":3,"sources":["redux/types.js","redux/reducers/alertReducer.js","redux/reducers/authReducer.js","redux/reducers/metricsReducer.js","redux/reducers/graphReducer.js","redux/reducers/receiversReducer.js","redux/reducers/plaidReducer.js","redux/reducers/selectedReducer.js","redux/reducers/index.js","redux/store.js","api/REST.js","redux/actions/alertAction.js","utils/setAuthToken.js","redux/actions/authAction.js","components/NavBar.js","pages/Landing.js","components/Alerts.js","pages/Register.js","pages/Login.js","redux/actions/profileAction.js","components/TransactionBar.js","components/TransactionGraph.js","components/Selected/ReceiverCard.js","components/Selected/SelectedReceiver.js","pages/Dash.js","redux/actions/receiversAction.js","components/Receiver/Receiver.js","pages/Search.js","redux/actions/plaidAction.js","components/Plaid/Link.js","components/Plaid/Item.js","pages/Settings.js","pages/receiverPages/UpdateReceiver.js","pages/receiverPages/ReceiverDash.js","pages/receiverPages/AddReceiver.js","pages/receiverPages/Receiver.js","pages/NotFound.js","utils/PrivateRoute.js","utils/Routes.js","App.js","serviceWorker.js","index.js"],"names":["LOGOUT","initialState","token","localStorage","getItem","isAuthenticated","loading","user","metrics","oneDayTotal","oneWeekTotal","oneMonthTotal","oneYearTotal","errors","graphData","graphTitle","graphDates","graphAmounts","receiversData","userReceiver","dashLink","transactionsData","plaidItems","selectedReceiver","combineReducers","alert","state","action","type","payload","filter","id","auth","setItem","removeItem","graph","receivers","plaid","selected","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","axios","create","baseURL","setAlert","msg","alertType","timeout","dispatch","a","async","uuid","v4","setTimeout","setAuthToken","REST","defaults","headers","common","loadUser","get","res","data","LogoNavBar","styled","Navbar","Brand","mapActionsToProps","logout","connect","authLinks","to","Nav","className","Link","selectedReceiverId","isReceiver","Button","variant","onClick","guestLinks","bg","sticky","PrimaryContainer","Container","SecondaryContainer","fluid","Row","Col","class","icon","faUserFriends","size","color","faChartArea","faShieldAlt","Alert","propTypes","alerts","PropTypes","array","isRequired","length","map","key","register","firstName","lastName","email","password","config","body","JSON","stringify","post","console","log","response","forEach","error","useState","confirmPassword","formData","setFormData","onChange","e","target","name","value","Card","Header","style","Body","Form","onSubmit","preventDefault","Group","controlId","Label","Control","placeholder","login","setSelected","setMetrics","useEffect","toFixed","setGraph","graphType","weekLoading","setWeekLoading","monthLoading","setMonthLoading","yearLoading","setYearLoading","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Title","options","legend","display","tooltips","displayColors","ButtonToolbar","disabled","deleteSelected","delete","receiverId","receiverName","receiverDescription","receiverImage","sm","Image","src","rounded","Text","faTrashAlt","select","_id","description","image","Dash","setUserReceiver","res2","statusText","addSelected","handleClick","faPlusSquare","setReceivers","ReceiverList","receiver","setPlaidItems","setPublicToken","publicToken","accountId","clientName","env","product","publicKey","webhook","onExit","onSuccess","public_token","metadata","account_id","account","deletePlaidItem","accountName","registerAccount","registeredAccount","updateReceiver","ReceiverDash","href","receiverStripeAuth","NotFound","faExclamationCircle","Component","component","rest","render","props","Routes","exact","path","Login","Register","Search","Receiver","Settings","App","background","Landing","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b61e558.chunk.js","sourcesContent":["// Alert Reducer\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\n// Auth Reducer\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGOUT = 'LOGOUT';\n\n// Metrics Reducer\nexport const SET_METRICS = 'SET_METRICS';\nexport const CLEAR_METRICS = 'CLEAR_METRICS';\nexport const METRICS_ERROR = 'METRICS_ERROR';\n\n// Graph Reducer\nexport const SET_GRAPH = 'SET_GRAPH';\nexport const CLEAR_GRAPH = 'CLEAR_GRAPH';\nexport const GRAPH_ERROR = 'GRAPH_ERROR';\n\n// Receivers Reducer\nexport const SET_RECEIVERS = 'SET_RECEIVERS';\nexport const SET_USER_RECEIVER = 'SET_USER_RECEIVER';\nexport const SET_RECEIVER_DASH_LINK = 'SET_RECEIVER_DASH_LINK';\nexport const CLEAR_RECEIVERS = 'CLEAR_RECEIVERS';\nexport const RECEIVERS_ERROR = 'RECEIVERS_ERROR';\n\n// Plaid Reducer\nexport const SET_PUBLIC_TOKEN = 'SET_PUBLIC_TOKEN';\nexport const GET_ACCESS_TOKEN = 'GET_ACCESS_TOKEN';\nexport const SET_PLAID_TRANSACTIONS = 'SET_PLAID_TRANSACTIONS';\nexport const SET_PLAID_ITEMS = 'SET_PLAID_ITEMS';\nexport const CLEAR_PLAID_ITEMS = 'CLEAR_PLAID_ITEMS';\nexport const PLAID_ERROR = 'PLAID_ERROR';\n\n// Selected Reducer\nexport const SET_SELECTED = 'SET_SELECTED';\nexport const CLEAR_SELECTED = 'CLEAR_SELECTED';\nexport const SELECTED_ERROR = 'SELECTED_ERROR';\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_ALERT:\n\t\t\treturn [...state, payload];\n\t\tcase REMOVE_ALERT:\n\t\t\treturn state.filter(alert => alert.id !== payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tUSER_LOADED,\n\tAUTH_ERROR,\n\tLOGOUT\n} from '../types';\n\nconst initialState = {\n\ttoken: localStorage.getItem('token'),\n\tisAuthenticated: null,\n\tloading: true,\n\tuser: null\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase USER_LOADED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tloading: false,\n\t\t\t\tuser: payload\n\t\t\t};\n\t\tcase REGISTER_SUCCESS:\n\t\tcase LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem('token', payload.token);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase REGISTER_FAIL:\n\t\tcase AUTH_ERROR:\n\t\tcase LOGIN_FAIL:\n\t\tcase LOGOUT:\n\t\t\tlocalStorage.removeItem('token');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken: null,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { SET_METRICS, CLEAR_METRICS, METRICS_ERROR, LOGOUT } from '../types';\n\nconst initialState = {\n\tmetrics: {\n\t\toneDayTotal: null,\n\t\toneWeekTotal: null,\n\t\toneMonthTotal: null,\n\t\toneYearTotal: null\n\t},\n\tloading: true,\n\terrors: false\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_METRICS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tmetrics: payload\n\t\t\t};\n\t\tcase CLEAR_METRICS:\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tmetrics: {\n\t\t\t\t\toneDayTotal: null,\n\t\t\t\t\toneWeekTotal: null,\n\t\t\t\t\toneMonthTotal: null,\n\t\t\t\t\toneYearTotal: null\n\t\t\t\t}\n\t\t\t};\n\t\tcase METRICS_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { SET_GRAPH, CLEAR_GRAPH, GRAPH_ERROR, LOGOUT } from '../types';\n\nconst initialState = {\n\tgraphData: {\n\t\tgraphTitle: '',\n\t\tgraphDates: [],\n\t\tgraphAmounts: []\n\t},\n\tloading: true,\n\terrors: false\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_GRAPH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tgraphData: payload\n\t\t\t};\n\t\tcase CLEAR_GRAPH:\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tgraphData: {\n\t\t\t\t\tgraphTitle: '',\n\t\t\t\t\tgraphDates: [],\n\t\t\t\t\tgraphAmounts: []\n\t\t\t\t}\n\t\t\t};\n\t\tcase GRAPH_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {\n\tSET_RECEIVERS,\n\tSET_USER_RECEIVER,\n\tSET_RECEIVER_DASH_LINK,\n\tCLEAR_RECEIVERS,\n\tRECEIVERS_ERROR,\n\tLOGOUT\n} from '../types';\n\nconst initialState = {\n\treceiversData: [],\n\tuserReceiver: null,\n\tdashLink: null,\n\tloading: true\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_RECEIVERS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\treceiversData: payload\n\t\t\t};\n\t\tcase SET_USER_RECEIVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tuserReceiver: payload\n\t\t\t};\n\t\tcase SET_RECEIVER_DASH_LINK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tdashLink: payload\n\t\t\t};\n\t\tcase CLEAR_RECEIVERS:\n\t\tcase RECEIVERS_ERROR:\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\treceiversData: [],\n\t\t\t\tuserReceiver: null,\n\t\t\t\tdashLink: null\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {\n\tSET_PUBLIC_TOKEN,\n\tGET_ACCESS_TOKEN,\n\tSET_PLAID_TRANSACTIONS,\n\tSET_PLAID_ITEMS,\n\tPLAID_ERROR,\n\tCLEAR_PLAID_ITEMS,\n\tLOGOUT\n} from '../types';\n\nconst initialState = {\n\ttransactionsData: [],\n\tplaidItems: {},\n\tloading: true,\n\terrors: false\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_PLAID_ITEMS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaidItems: payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase CLEAR_PLAID_ITEMS:\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaidItems: null,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase SET_PLAID_TRANSACTIONS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactionsData: payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase PLAID_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\ttransactionsData: [],\n\t\t\t\tplaidItems: null\n\t\t\t};\n\t\tcase GET_ACCESS_TOKEN:\n\t\tcase SET_PUBLIC_TOKEN:\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { SET_SELECTED, CLEAR_SELECTED, SELECTED_ERROR, LOGOUT } from '../types';\n\nconst initialState = {\n\tselectedReceiver: null,\n\tloading: true,\n\terrors: false\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_SELECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terrors: false,\n\t\t\t\tselectedReceiver: payload\n\t\t\t};\n\t\tcase CLEAR_SELECTED:\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terrors: false,\n\t\t\t\tselectedReceiver: null\n\t\t\t};\n\t\tcase SELECTED_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\n\n// Reducers\nimport alert from './alertReducer';\nimport auth from './authReducer';\nimport metrics from './metricsReducer';\nimport graph from './graphReducer';\nimport receivers from './receiversReducer';\nimport plaid from './plaidReducer';\nimport selected from './selectedReducer';\n\nexport default combineReducers({\n\talert,\n\tauth,\n\tmetrics,\n\tgraph,\n\treceivers,\n\tplaid,\n\tselected\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from 'axios';\n\nexport default axios.create({\n\tbaseURL: 'http://localhost:5000'\n});\n","import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => async dispatch => {\n\tconst id = uuid.v4();\n\tawait dispatch({\n\t\ttype: SET_ALERT,\n\t\tpayload: { msg, alertType, id }\n\t});\n\n\tsetTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","import REST from '../api/REST';\n\nconst setAuthToken = token => {\n\tif (token) {\n\t\tREST.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\t} else {\n\t\tdelete REST.defaults.headers.common['Authorization'];\n\t}\n};\n\nexport default setAuthToken;\n","import REST from '../../api/REST';\nimport { setAlert } from './alertAction';\nimport {\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tUSER_LOADED,\n\tAUTH_ERROR,\n\tLOGOUT\n} from '../types';\nimport setAuthToken from '../../utils/setAuthToken';\n\n// Load User Data\nexport const loadUser = () => async dispatch => {\n\tif (localStorage.token) {\n\t\tsetAuthToken(localStorage.token);\n\t}\n\n\ttry {\n\t\tconst res = await REST.get('/api/users/user');\n\n\t\tdispatch({\n\t\t\ttype: USER_LOADED,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: AUTH_ERROR\n\t\t});\n\t}\n};\n\n// Register User\nexport const register = ({\n\tfirstName,\n\tlastName,\n\temail,\n\tpassword\n}) => async dispatch => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t};\n\n\tconst body = JSON.stringify({ firstName, lastName, email, password });\n\n\ttry {\n\t\tconst res = await REST.post('/api/users/user/register', body, config);\n\n\t\tdispatch({\n\t\t\ttype: REGISTER_SUCCESS,\n\t\t\tpayload: res.data\n\t\t});\n\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tconsole.log(err.response.data.errors);\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: REGISTER_FAIL\n\t\t});\n\t}\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t};\n\n\tconst body = JSON.stringify({ email, password });\n\n\ttry {\n\t\tconst res = await REST.post('/api/users/user/login', body, config);\n\n\t\tdispatch({\n\t\t\ttype: LOGIN_SUCCESS,\n\t\t\tpayload: res.data\n\t\t});\n\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: LOGIN_FAIL\n\t\t});\n\t}\n};\n\n// Logout / Clear Profile\nexport const logout = () => dispatch => {\n\tdispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport styled from 'styled-components';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { logout } from '../redux/actions/authAction';\n\n// Bootstrap\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nconst LogoNavBar = styled(Navbar.Brand)`\n\tfont-family: 'Montserrat', sans-serif;\n`;\n\nconst NavBar = ({ auth: { isAuthenticated, loading, user }, logout }) => {\n\tconst authLinks = (\n\t\t<Fragment>\n\t\t\t<LinkContainer to='/dash'>\n\t\t\t\t<LogoNavBar>\n\t\t\t\t\t<h2>UPIRIA</h2>\n\t\t\t\t</LogoNavBar>\n\t\t\t</LinkContainer>\n\t\t\t<Nav className='ml-auto'>\n\t\t\t\t<LinkContainer to='/dash' className='mx-2'>\n\t\t\t\t\t<Nav.Link>Dash</Nav.Link>\n\t\t\t\t</LinkContainer>\n\n\t\t\t\t{user && !user.selectedReceiverId && (\n\t\t\t\t\t<LinkContainer to='/search' className='mx-2'>\n\t\t\t\t\t\t<Nav.Link>Search</Nav.Link>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t)}\n\n\t\t\t\t{user && user.isReceiver && (\n\t\t\t\t\t<LinkContainer to='/receiver' className='mx-2'>\n\t\t\t\t\t\t<Nav.Link>Receiver</Nav.Link>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t)}\n\n\t\t\t\t<LinkContainer to='/settings' className='mx-2'>\n\t\t\t\t\t<Nav.Link>Settings</Nav.Link>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Button variant='danger' onClick={logout} className='mx-2'>\n\t\t\t\t\tLog Out\n\t\t\t\t</Button>\n\t\t\t</Nav>\n\t\t</Fragment>\n\t);\n\n\tconst guestLinks = (\n\t\t<Fragment>\n\t\t\t<LinkContainer to='/'>\n\t\t\t\t<LogoNavBar>\n\t\t\t\t\t<h2>UPIRIA</h2>\n\t\t\t\t</LogoNavBar>\n\t\t\t</LinkContainer>\n\t\t\t<Nav className='ml-auto'>\n\t\t\t\t<LinkContainer to='/login' className='mx-2'>\n\t\t\t\t\t<Nav.Link>Login</Nav.Link>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<LinkContainer to='/register' className='mx-2'>\n\t\t\t\t\t<Nav.Link>Register</Nav.Link>\n\t\t\t\t</LinkContainer>\n\t\t\t</Nav>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Navbar bg='primary' variant='dark' sticky='top'>\n\t\t\t{!loading && (\n\t\t\t\t<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n\t\t\t)}\n\t\t</Navbar>\n\t);\n};\n\nNavBar.propTypes = {\n\tlogout: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n});\n\nconst mapActionsToProps = {\n\tlogout\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(NavBar);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Redirect, Link } from 'react-router-dom';\n\n//Redux\nimport { connect } from 'react-redux';\n\n// Bootstrap\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaUserFriends,\n\tfaChartArea,\n\tfaShieldAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nconst PrimaryContainer = styled(Container)`\n\tbackground: #007bff;\n`;\n\nconst SecondaryContainer = styled(Container)`\n\tbackground: #eceff1;\n`;\n\nconst Landing = ({ isAuthenticated }) => {\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/dash' />;\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<PrimaryContainer fluid className='text-white py-5'>\n\t\t\t\t<Row className='py-5' />\n\t\t\t\t<Row className='py-3 px-5'>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h1 class='display-1'>OUR MISSION:</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className='py-3 px-5'>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\tTo provide people a better way of supporting local and national\n\t\t\t\t\t\tpolitical figures\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className='py-3 px-5'>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to='/register'>\n\t\t\t\t\t\t\t<Button variant='light' className='text-primary'>\n\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className='py-4' />\n\t\t\t</PrimaryContainer>\n\t\t\t<SecondaryContainer fluid className='m-5'>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className='px-5'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserFriends} size='2x' color='#007bff' />\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h4>Support</h4>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\tConveniently support your favorite politicians and political\n\t\t\t\t\t\t\tfigures\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className='px-5'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChartArea} size='2x' color='#007bff' />\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h4>Track</h4>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\tOur dash tools allow you to easily track how much you are spending\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className='px-5'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faShieldAlt} size='2x' color='#007bff' />\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h4>Secure</h4>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>We provide a secure method of transacting currency</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</SecondaryContainer>\n\t\t</Fragment>\n\t);\n};\n\nLanding.propTypes = {\n\tisAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// Bootstrap\nimport Alert from 'react-bootstrap/Alert';\n\nconst Alerts = ({ alerts }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t{alerts !== null &&\n\t\t\t\talerts.length > 0 &&\n\t\t\t\talerts.map(alert => (\n\t\t\t\t\t<Alert key={alert.id} variant={`${alert.alertType}`}>\n\t\t\t\t\t\t{alert.msg}\n\t\t\t\t\t</Alert>\n\t\t\t\t))}\n\t\t</Fragment>\n\t);\n};\n\nAlert.propTypes = {\n\talerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n\talerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alerts);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { setAlert } from '../redux/actions/alertAction';\nimport { register } from '../redux/actions/authAction';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n\tconst [formData, setFormData] = useState({\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tconfirmPassword: ''\n\t});\n\n\tconst { firstName, lastName, email, password, confirmPassword } = formData;\n\n\tconst onChange = e => {\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t};\n\n\tconst onSubmit = async e => {\n\t\te.preventDefault();\n\t\tif (password !== confirmPassword) {\n\t\t\tsetAlert('Passwords do not match', 'danger');\n\t\t\tconsole.log('Passwords do not match');\n\t\t} else {\n\t\t\tregister({ firstName, lastName, email, password });\n\t\t}\n\t};\n\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/dash' />;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='my-5 p-2 shadow-sm'>\n\t\t\t\t<Card.Header style={{ 'background-color': 'white' }}>\n\t\t\t\t\t<h3>Register</h3>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Form onSubmit={e => onSubmit(e)}>\n\t\t\t\t\t\t<Form.Group controlId='formBasicFirstName'>\n\t\t\t\t\t\t\t<Form.Label>First Name:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter First Name'\n\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='formBasicLastName'>\n\t\t\t\t\t\t\t<Form.Label>Last Name:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter Last Name'\n\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='formBasicEmail'>\n\t\t\t\t\t\t\t<Form.Label>Email address:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='formBasicPassword'>\n\t\t\t\t\t\t\t<Form.Label>Password:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='formBasicConfirmPassword'>\n\t\t\t\t\t\t\t<Form.Label>Confirm Password:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button variant='primary btn-block' type='submit' className='mt-4'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<div className='mt-3'>\n\t\t\t\t\t\t<Link to='/login'>Already have an account? Login instead</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nRegister.propTypes = {\n\tsetAlert: PropTypes.func.isRequired,\n\tregister: PropTypes.func.isRequired,\n\tisAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: state.auth.isAuthenticated\n});\n\nconst mapActionsToProps = {\n\tsetAlert,\n\tregister\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Register);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { setAlert } from '../redux/actions/alertAction';\nimport { login } from '../redux/actions/authAction';\n\nconst Login = ({ login, isAuthenticated }) => {\n\tconst [formData, setFormData] = useState({\n\t\temail: '',\n\t\tpassword: ''\n\t});\n\n\tconst { email, password } = formData;\n\n\tconst onChange = e => {\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t};\n\n\tconst onSubmit = async e => {\n\t\te.preventDefault();\n\t\tlogin(email, password);\n\t};\n\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/dash' />;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='my-5 p-2 shadow-sm'>\n\t\t\t\t<Card.Header style={{ 'background-color': 'white' }}>\n\t\t\t\t\t<h3>Login</h3>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Form onSubmit={e => onSubmit(e)}>\n\t\t\t\t\t\t<Form.Group controlId='formBasicEmail'>\n\t\t\t\t\t\t\t<Form.Label>Email address:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId='formBasicPassword'>\n\t\t\t\t\t\t\t<Form.Label>Password:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button variant='primary btn-block' type='submit' className='mt-4'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<div className='mt-3'>\n\t\t\t\t\t\t<Link to='/register'>Don't have an account? Register instead</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nLogin.propTypes = {\n\tsetAlert: PropTypes.func.isRequired,\n\tlogin: PropTypes.func.isRequired,\n\tisAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: state.auth.isAuthenticated\n});\n\nconst mapActionsToProps = {\n\tsetAlert,\n\tlogin\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\n","import REST from '../../api/REST';\nimport { setAlert } from './alertAction';\nimport {\n\tSET_METRICS,\n\tCLEAR_METRICS,\n\tMETRICS_ERROR,\n\tSET_GRAPH,\n\tCLEAR_GRAPH,\n\tGRAPH_ERROR,\n\tSET_SELECTED,\n\tCLEAR_SELECTED,\n\tSELECTED_ERROR\n} from '../types';\nimport { loadUser } from './authAction';\n// import setAuthToken from '../../utils/setAuthToken';\n\nexport const setMetrics = () => async dispatch => {\n\ttry {\n\t\tconst res = await REST.get('/api/transactions/metrics');\n\t\tdispatch({\n\t\t\ttype: SET_METRICS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: METRICS_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n\nexport const clearMetrics = () => async dispatch => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: CLEAR_METRICS\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: METRICS_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n\nexport const setGraph = (graphType = 'week') => async dispatch => {\n\ttry {\n\t\tvar res = {};\n\t\tif (graphType === 'month') {\n\t\t\tres = await REST.get('/api/transactions/month');\n\t\t} else if (graphType === 'year') {\n\t\t\tres = await REST.get('/api/transactions/year');\n\t\t} else {\n\t\t\tres = await REST.get('/api/transactions/week');\n\t\t}\n\t\tdispatch({\n\t\t\ttype: SET_GRAPH,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: GRAPH_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n\nexport const clearGraph = () => async dispatch => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: CLEAR_GRAPH\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: GRAPH_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n\nexport const setSelected = () => async dispatch => {\n\ttry {\n\t\tconst res = await REST.get('/api/users/user/selectedReceiver');\n\t\tdispatch({\n\t\t\ttype: SET_SELECTED,\n\t\t\tpayload: res.data\n\t\t});\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: SELECTED_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n\nexport const addSelected = ({ receiverId }) => async dispatch => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t};\n\n\tconst body = JSON.stringify({ receiverId });\n\n\ttry {\n\t\tawait REST.post('/api/users/user/selectedReceiver', body, config);\n\t\tdispatch(setSelected());\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: SELECTED_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n\nexport const deleteSelected = id => async dispatch => {\n\ttry {\n\t\tawait REST.delete(`/api/users/user/selectedReceiver/${id}`);\n\t\tdispatch({\n\t\t\ttype: CLEAR_SELECTED\n\t\t});\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: SELECTED_ERROR,\n\t\t\tpayload: { msg: err.response }\n\t\t});\n\t}\n};\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { setMetrics } from '../redux/actions/profileAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst TransactionBar = ({ metrics: { metrics, loading }, setMetrics }) => {\n\tuseEffect(() => {\n\t\tsetMetrics();\n\t}, [setMetrics]);\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm p-3 my-3'>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\tToday: $\n\t\t\t\t\t\t\t{metrics.oneDayTotal &&\n\t\t\t\t\t\t\t\t!loading &&\n\t\t\t\t\t\t\t\tmetrics.oneDayTotal.toFixed(2)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\tThis Week: $\n\t\t\t\t\t\t\t{metrics.oneWeekTotal &&\n\t\t\t\t\t\t\t\t!loading &&\n\t\t\t\t\t\t\t\tmetrics.oneWeekTotal.toFixed(2)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\tThis Month: $\n\t\t\t\t\t\t\t{metrics.oneMonthTotal &&\n\t\t\t\t\t\t\t\t!loading &&\n\t\t\t\t\t\t\t\tmetrics.oneMonthTotal.toFixed(2)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\tThis Year: $\n\t\t\t\t\t\t\t{metrics.oneYearTotal &&\n\t\t\t\t\t\t\t\t!loading &&\n\t\t\t\t\t\t\t\tmetrics.oneYearTotal.toFixed(2)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nTransactionBar.propTypes = {\n\tsetMetrics: PropTypes.func.isRequired,\n\tmetrics: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tmetrics: state.metrics\n});\n\nconst mapActionsToProps = {\n\tsetMetrics\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(TransactionBar);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { setGraph } from '../redux/actions/profileAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Button from 'react-bootstrap/Button';\n\nconst TransactionGraph = ({ graph: { graphData }, setGraph }) => {\n\tconst [weekLoading, setWeekLoading] = useState(true);\n\tconst [monthLoading, setMonthLoading] = useState(false);\n\tconst [yearLoading, setYearLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetGraph();\n\t}, [setGraph]);\n\n\tconst handleWeeklyClick = e => {\n\t\te.preventDefault();\n\t\tsetGraph('week');\n\t\tsetWeekLoading(true);\n\t\tsetMonthLoading(false);\n\t\tsetYearLoading(false);\n\t};\n\tconst handleMonthlyClick = e => {\n\t\te.preventDefault();\n\t\tsetGraph('month');\n\t\tsetWeekLoading(false);\n\t\tsetMonthLoading(true);\n\t\tsetYearLoading(false);\n\t};\n\tconst handleYearlyClick = e => {\n\t\te.preventDefault();\n\t\tsetGraph('year');\n\t\tsetWeekLoading(false);\n\t\tsetMonthLoading(false);\n\t\tsetYearLoading(true);\n\t};\n\n\tconst options = {\n\t\tlegend: {\n\t\t\tdisplay: false\n\t\t},\n\t\ttooltips: {\n\t\t\tdisplayColors: false\n\t\t}\n\t};\n\n\tconst data = {\n\t\tlabels: graphData.graphDates,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: graphData.graphTitle,\n\t\t\t\tfill: false,\n\t\t\t\tlineTension: 0.1,\n\t\t\t\tbackgroundColor: 'rgba(2,117,216,0.4)',\n\t\t\t\tborderColor: 'rgba(2,117,216,1)',\n\t\t\t\tborderCapStyle: 'butt',\n\t\t\t\tborderDash: [],\n\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\tborderJoinStyle: 'miter',\n\t\t\t\tpointBorderColor: 'rgba(2,117,216,1)',\n\t\t\t\tpointBackgroundColor: '#fff',\n\t\t\t\tpointBorderWidth: 3,\n\t\t\t\tpointHoverRadius: 5,\n\t\t\t\tpointHoverBackgroundColor: 'rgba(2,117,216,1)',\n\t\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\tpointRadius: 5,\n\t\t\t\tpointHitRadius: 15,\n\t\t\t\tdata: graphData.graphAmounts\n\t\t\t}\n\t\t]\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>{graphData.graphTitle}:</Card.Title>\n\t\t\t\t\t<Line data={data} options={options} />\n\t\t\t\t\t<ButtonToolbar className='my-2'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tonClick={handleWeeklyClick}\n\t\t\t\t\t\t\tdisabled={weekLoading}\n\t\t\t\t\t\t\tclassName='mr-1'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWeekly\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tonClick={handleMonthlyClick}\n\t\t\t\t\t\t\tdisabled={monthLoading}\n\t\t\t\t\t\t\tclassName='mx-1'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMonthly\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tonClick={handleYearlyClick}\n\t\t\t\t\t\t\tdisabled={yearLoading}\n\t\t\t\t\t\t\tclassName='ml-1'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tYearly\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nTransactionGraph.propTypes = {\n\tsetGraph: PropTypes.func.isRequired,\n\tgraph: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tgraph: state.graph\n});\n\nconst mapActionsToProps = {\n\tsetGraph\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(TransactionGraph);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { deleteSelected } from '../../redux/actions/profileAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst ReceiverCard = ({\n\treceiverId,\n\treceiverName,\n\treceiverDescription,\n\treceiverImage,\n\tdeleteSelected\n}) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t<Image src={receiverImage} rounded fluid />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Card.Title>{receiverName}</Card.Title>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Card.Text>{receiverDescription}</Card.Text>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={1}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='link'\n\t\t\t\t\t\t\t\t\tonClick={() => deleteSelected(receiverId)}\n\t\t\t\t\t\t\t\t\tclassName='mt-4 mb-1'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashAlt} size='4x' color='red' />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nReceiverCard.propTypes = {\n\treceiverId: PropTypes.string.isRequired,\n\treceiverName: PropTypes.string.isRequired,\n\treceiverDescription: PropTypes.string.isRequired,\n\treceiverImage: PropTypes.string.isRequired,\n\tdeleteSelected: PropTypes.func.isRequired\n};\n\nconst mapActionsToProps = {\n\tdeleteSelected\n};\n\nexport default connect(null, mapActionsToProps)(ReceiverCard);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { setSelected } from '../../redux/actions/profileAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\n// Components\nimport ReceiverCard from './ReceiverCard';\n\nconst SelectedReceiver = ({\n\tselected: { selectedReceiver, loading },\n\tsetSelected\n}) => {\n\tuseEffect(() => {\n\t\tsetSelected();\n\t}, [setSelected]);\n\n\tconst select = (\n\t\t<Fragment>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Select Receiver:</Card.Title>\n\t\t\t\t<Link to='/search'>\n\t\t\t\t\t<Button>Add Receiver</Button>\n\t\t\t\t</Link>\n\t\t\t</Card.Body>\n\t\t</Fragment>\n\t);\n\tconst selected = (\n\t\t<Fragment>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Selected Receiver:</Card.Title>\n\t\t\t\t{!loading && selectedReceiver !== null && (\n\t\t\t\t\t<ReceiverCard\n\t\t\t\t\t\treceiverId={selectedReceiver._id}\n\t\t\t\t\t\treceiverName={selectedReceiver.name}\n\t\t\t\t\t\treceiverDescription={selectedReceiver.description}\n\t\t\t\t\t\treceiverImage={selectedReceiver.image}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Card.Body>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t{!loading && (\n\t\t\t\t\t<Fragment>{selectedReceiver === null ? select : selected}</Fragment>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nSelectedReceiver.propTypes = {\n\tsetSelected: PropTypes.func.isRequired,\n\tselected: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tselected: state.selected\n});\n\nconst mapActionsToProps = {\n\tsetSelected\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(SelectedReceiver);\n","import React, { Fragment } from 'react';\n\n// Components\nimport TransactionBar from '../components/TransactionBar';\nimport TransactionGraph from '../components/TransactionGraph';\nimport SelectedReceiver from '../components/Selected/SelectedReceiver';\n\nconst Dash = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<TransactionBar />\n\t\t\t<TransactionGraph />\n\t\t\t<SelectedReceiver />\n\t\t</Fragment>\n\t);\n};\n\nexport default Dash;\n","import REST from '../../api/REST';\nimport { setAlert } from './alertAction';\nimport {\n\tSET_RECEIVERS,\n\tRECEIVERS_ERROR,\n\tSET_USER_RECEIVER,\n\tSET_RECEIVER_DASH_LINK\n} from '../types';\n\nexport const setReceivers = () => async dispatch => {\n\ttry {\n\t\tconst res = await REST.get('/api/receivers/');\n\t\tdispatch({\n\t\t\ttype: SET_RECEIVERS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: RECEIVERS_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n\nexport const setUserReceiver = () => async dispatch => {\n\ttry {\n\t\tconst res = await REST.get('/api/receivers/receiver');\n\t\tdispatch({\n\t\t\ttype: SET_USER_RECEIVER,\n\t\t\tpayload: res.data\n\t\t});\n\n\t\tconst res2 = await REST.post('/api/receivers/receiver/dash');\n\t\tdispatch({\n\t\t\ttype: SET_RECEIVER_DASH_LINK,\n\t\t\tpayload: res2.data\n\t\t});\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: RECEIVERS_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n\nexport const updateReceiver = (\n\tfirstName,\n\tlastName,\n\tdescription,\n\timage\n) => async dispatch => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t};\n\n\tconst body = JSON.stringify({ firstName, lastName, description, image });\n\n\ttry {\n\t\tconst res = await REST.post('/api/receivers/receiver', body, config);\n\t\tdispatch(setAlert(res.data.msg, 'success'));\n\t\tdispatch(setUserReceiver());\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: RECEIVERS_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n\nexport const receiverStripeAuth = () => async dispatch => {\n\ttry {\n\t\tawait REST.get('/api/receivers/receiver/auth');\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: RECEIVERS_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { addSelected } from '../../redux/actions/profileAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst Receiver = ({\n\treceiverId,\n\treceiverName,\n\treceiverDescription,\n\treceiverImage,\n\taddSelected\n}) => {\n\tconst handleClick = receiverId => {\n\t\taddSelected({ receiverId: receiverId });\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='my-3 shadow-sm'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t<Image src={receiverImage} rounded fluid />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Card.Title>{receiverName}</Card.Title>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Card.Text>{receiverDescription}</Card.Text>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={1}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='link'\n\t\t\t\t\t\t\t\t\tonClick={() => handleClick(receiverId)}\n\t\t\t\t\t\t\t\t\tclassName='mt-4 mb-1'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlusSquare} size='4x' />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nReceiver.propTypes = {\n\treceiverId: PropTypes.string.isRequired,\n\treceiverName: PropTypes.string.isRequired,\n\treceiverDescription: PropTypes.string.isRequired,\n\treceiverImage: PropTypes.string.isRequired,\n\taddSelected: PropTypes.func.isRequired\n};\n\nconst mapActionsToProps = { addSelected };\n\nexport default connect(null, mapActionsToProps)(Receiver);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { setReceivers } from '../redux/actions/receiversAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\n\n// Components\nimport Receiver from '../components/Receiver/Receiver';\n\nconst Search = ({\n\treceivers: { receiversData, loading },\n\tselected: { selectedReceiver },\n\tsetReceivers\n}) => {\n\tuseEffect(() => {\n\t\tsetReceivers();\n\t}, [setReceivers]);\n\n\tif (selectedReceiver) {\n\t\treturn <Redirect to='/dash' />;\n\t}\n\n\tconst ReceiverList = loading ? (\n\t\t<h1>Loading</h1>\n\t) : selectedReceiver !== null ? (\n\t\t<h1>Already have a receiver selected</h1>\n\t) : (\n\t\treceiversData.map(receiver => (\n\t\t\t<Fragment key={receiver._id}>\n\t\t\t\t<Receiver\n\t\t\t\t\treceiverId={receiver._id}\n\t\t\t\t\treceiverName={receiver.name}\n\t\t\t\t\treceiverDescription={receiver.description}\n\t\t\t\t\treceiverImage={receiver.image}\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t))\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t<Card.Header style={{ 'background-color': 'white' }}>\n\t\t\t\t\t<h3>Available Recipients:</h3>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>{ReceiverList}</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nSearch.propTypes = {\n\tsetReceivers: PropTypes.func.isRequired,\n\treceivers: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\treceivers: state.receivers,\n\tselected: state.selected\n});\n\nconst mapActionsToProps = {\n\tsetReceivers\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Search);\n","import REST from '../../api/REST';\nimport { setAlert } from './alertAction';\nimport { loadUser } from './authAction';\nimport {\n\tSET_PUBLIC_TOKEN,\n\tSET_PLAID_TRANSACTIONS,\n\tPLAID_ERROR,\n\tSET_PLAID_ITEMS,\n\tCLEAR_PLAID_ITEMS\n} from '../types';\n\nexport const setPublicToken = (\n\tpublicToken,\n\taccountId,\n\tname\n) => async dispatch => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t};\n\n\tconst body = JSON.stringify({ publicToken, accountId, name });\n\n\ttry {\n\t\tawait REST.post('/api/plaid/auth/public_token', body, config);\n\n\t\tdispatch({\n\t\t\ttype: SET_PUBLIC_TOKEN\n\t\t});\n\n\t\tdispatch(setPlaidItems());\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PLAID_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n\nexport const setPlaidTransactions = () => async dispatch => {\n\ttry {\n\t\tconst res = await REST.get('/api/plaid/transactions');\n\n\t\tdispatch({\n\t\t\ttype: SET_PLAID_TRANSACTIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PLAID_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n\nexport const setPlaidItems = () => async dispatch => {\n\ttry {\n\t\tconst res = await REST.get('/api/plaid/user/items');\n\n\t\tdispatch({\n\t\t\ttype: SET_PLAID_ITEMS,\n\t\t\tpayload: res.data\n\t\t});\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PLAID_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n\nexport const deletePlaidItem = id => async dispatch => {\n\ttry {\n\t\tawait REST.delete(`/api/plaid/user/item/${id}`);\n\t\tdispatch({\n\t\t\ttype: CLEAR_PLAID_ITEMS\n\t\t});\n\t\tdispatch(loadUser());\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PLAID_ERROR,\n\t\t\tpayload: { msg: err.response.statusText }\n\t\t});\n\t}\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport PlaidLink from 'react-plaid-link';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { setPublicToken } from '../../redux/actions/plaidAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\n\nconst Link = ({ setPublicToken }) => {\n\tconst handleOnSuccess = (public_token, metadata) => {\n\t\t// send token to client server\n\t\tconst account_id = metadata.account_id;\n\t\tconst name = metadata.account.name;\n\t\tsetPublicToken(public_token, account_id, name);\n\t};\n\n\tconst handleOnExit = () => {};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<PlaidLink\n\t\t\t\t\t\tclientName='React Plaid Setup'\n\t\t\t\t\t\tenv='sandbox'\n\t\t\t\t\t\tproduct={['auth', 'transactions']}\n\t\t\t\t\t\tpublicKey='18d9205e9c8060e88c9d25163276e6'\n\t\t\t\t\t\twebhook='https://webhook.site/d0d9f89c-9b6a-4c5e-9652-19521b4d8160'\n\t\t\t\t\t\tonExit={handleOnExit}\n\t\t\t\t\t\tonSuccess={handleOnSuccess}\n\t\t\t\t\t\tclassName='test'\n\t\t\t\t\t>\n\t\t\t\t\t\tConnect your bank\n\t\t\t\t\t</PlaidLink>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nLink.propTypes = {\n\tplaid: PropTypes.object.isRequired,\n\tsetPublicToken: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tplaid: state.plaid\n});\n\nconst mapActionsToProps = {\n\tsetPublicToken\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Link);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { deletePlaidItem } from '../../redux/actions/plaidAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Item = ({\n\tplaid: {\n\t\tplaidItems: { _id, accountName },\n\t\tloading\n\t},\n\tdeletePlaidItem\n}) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={11}>\n\t\t\t\t\t\t\t\t<Card.Title className='my-2'>\n\t\t\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t\t\t<h1>Loading</h1>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\taccountName !== null && <h3>{accountName}</h3>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={1}>\n\t\t\t\t\t\t\t\t<Button variant='link' onClick={() => deletePlaidItem(_id)}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashAlt} size='2x' color='red' />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nItem.propTypes = {\n\tplaid: PropTypes.object.isRequired,\n\tdeletePlaidItem: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tplaid: state.plaid\n});\n\nconst mapActionsToProps = {\n\tdeletePlaidItem\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Item);\n","import React, { Fragment, useEffect } from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { setPlaidItems } from '../redux/actions/plaidAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\n\n// Components\nimport Link from '../components/Plaid/Link';\nimport Item from '../components/Plaid/Item';\n\nconst Settings = ({ plaid: { plaidItems, loading }, setPlaidItems }) => {\n\tuseEffect(() => {\n\t\tsetPlaidItems();\n\t}, [setPlaidItems]);\n\n\tconst registerAccount = (\n\t\t<Fragment>\n\t\t\t<h6>Register Bank Account:</h6>\n\t\t\t<Link />\n\t\t</Fragment>\n\t);\n\n\tconst registeredAccount = (\n\t\t<Fragment>\n\t\t\t<h6>Registered Bank Account:</h6>\n\t\t\t<Item />\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t<Card.Header style={{ 'background-color': 'white' }}>\n\t\t\t\t\t<h3>Settings</h3>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{!loading && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t{plaidItems === null ? registerAccount : registeredAccount}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\tplaid: state.plaid\n});\n\nconst mapActionsToProps = {\n\tsetPlaidItems\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Settings);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { updateReceiver } from '../../redux/actions/receiversAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst UpdateReceiver = ({ auth: { user, loading }, updateReceiver }) => {\n\tconst [formData, setFormData] = useState({\n\t\tdescription: '',\n\t\timage: ''\n\t});\n\n\tconst { description, image } = formData;\n\n\tconst onChange = e => {\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t};\n\n\tconst onSubmit = async e => {\n\t\te.preventDefault();\n\t\tconsole.log({\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t\tdescription: description,\n\t\t\timage: image\n\t\t});\n\n\t\tawait updateReceiver(user.firstName, user.lastName, description, image);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card>\n\t\t\t\t<Card.Header style={{ 'background-color': 'white' }}>\n\t\t\t\t\t<h5>Add/Update Receiver</h5>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Form onSubmit={e => onSubmit(e)}>\n\t\t\t\t\t\t<Form.Group controlId='formDescription'>\n\t\t\t\t\t\t\t<Form.Label>Description:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter description'\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId='formImage'>\n\t\t\t\t\t\t\t<Form.Label>Image URL:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter image url'\n\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\tvalue={image}\n\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button variant='primary btn-block' type='submit' className='mt-4'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nUpdateReceiver.propTypes = {\n\tupdateReceiver: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n});\n\nconst mapActionsToProps = {\n\tupdateReceiver\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(UpdateReceiver);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nconst ReceiverDash = ({ dashLink }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<a href={dashLink}>\n\t\t\t\t\t\t<Button>Go to Stripe Dash</Button>\n\t\t\t\t\t</a>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nReceiverDash.propTypes = {\n\tdashLink: PropTypes.string.isRequired\n};\n\nexport default ReceiverDash;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { receiverStripeAuth } from '../../redux/actions/receiversAction';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nconst AddReceiver = ({ receiverStripeAuth }) => {\n\tconst handleClick = async e => {\n\t\tawait receiverStripeAuth();\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{/* <Button onClick={handleClick}>Create Stipe Account</Button> */}\n\t\t\t\t\t<a href='https://connect.stripe.com/express/oauth/authorize?redirect_uri=https://connect.stripe.com/connect/default/oauth/test&client_id=ca_GczqET5WCUcwzeU5oBZPun5CWnm9uvvt&state=123'>\n\t\t\t\t\t\t<Button>Create Stipe Account</Button>\n\t\t\t\t\t</a>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nAddReceiver.propTypes = {\n\treceiverStripeAuth: PropTypes.func.isRequired\n};\n\nconst mapActionsToProps = {\n\treceiverStripeAuth\n};\n\nexport default connect(null, mapActionsToProps)(AddReceiver);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { setUserReceiver } from '../../redux/actions/receiversAction';\n\n// Components\nimport UpdateReceiver from './UpdateReceiver';\nimport ReceiverDash from './ReceiverDash';\nimport AddReceiver from './AddReceiver';\n\n// Bootstrap\nimport Card from 'react-bootstrap/Card';\n\nconst Receiver = ({ userReceiver, loading, setUserReceiver, dashLink }) => {\n\tuseEffect(() => {\n\t\tsetUserReceiver();\n\t}, [setUserReceiver]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className='shadow-sm my-3'>\n\t\t\t\t<Card.Header style={{ 'background-color': 'white' }}>\n\t\t\t\t\t<h3>Receiver Info</h3>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{!loading && !userReceiver && <AddReceiver />}\n\t\t\t\t\t{!loading && userReceiver && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t{dashLink && <ReceiverDash dashLink={dashLink} />}\n\t\t\t\t\t\t\t<UpdateReceiver />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nReceiver.propTypes = {\n\tsetUserReceiver: PropTypes.func.isRequired,\n\tloading: PropTypes.bool.isRequired,\n\tuserReceiver: PropTypes.object,\n\tdashLink: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n\tuserReceiver: state.receivers.userReceiver,\n\tdashLink: state.receivers.dashLink,\n\tloading: state.receivers.loading\n});\n\nconst mapActionsToProps = {\n\tsetUserReceiver\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Receiver);\n","import React, { Fragment } from 'react';\n\n// Bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst NotFound = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Container>\n\t\t\t\t<Row className='p-5 justify-content-center'>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\ticon={faExclamationCircle}\n\t\t\t\t\t\tsize='4x'\n\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\tclassName='p-2'\n\t\t\t\t\t/>\n\t\t\t\t\t<h1 className='p-2'>Sorry, Page Not Found</h1>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n//Redux\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n\tcomponent: Component,\n\tauth: { isAuthenticated, loading },\n\t...rest\n}) => (\n\t<Route\n\t\t{...rest}\n\t\trender={props =>\n\t\t\t!isAuthenticated && !loading ? (\n\t\t\t\t<Redirect to='/login' />\n\t\t\t) : (\n\t\t\t\t<Component {...props} />\n\t\t\t)\n\t\t}\n\t/>\n);\n\nPrivateRoute.propTypes = {\n\tauth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components\nimport Alerts from '../components/Alerts';\n\n// Pages\nimport Register from '../pages/Register';\nimport Login from '../pages/Login';\nimport Dash from '../pages/Dash';\nimport Search from '../pages/Search';\nimport Settings from '../pages/Settings';\nimport Receiver from '../pages/receiverPages/Receiver';\nimport NotFound from '../pages/NotFound';\n\n// Bootstrap\nimport Container from 'react-bootstrap/Container';\n\n// Utils\nimport PrivateRoute from './PrivateRoute';\n\nconst Routes = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Container>\n\t\t\t\t<Alerts />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t<Route exact path='/register' component={Register} />\n\t\t\t\t\t<PrivateRoute exact path='/dash' component={Dash} />\n\t\t\t\t\t<PrivateRoute exact path='/search' component={Search} />\n\t\t\t\t\t<PrivateRoute exact path='/receiver' component={Receiver} />\n\t\t\t\t\t<PrivateRoute exact path='/settings' component={Settings} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default Routes;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { loadUser } from './redux/actions/authAction';\n\n// CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Components\nimport NavBar from './components/NavBar';\n\n// Pages\nimport Landing from './pages/Landing';\n\n// Utils\nimport setAuthToken from './utils/setAuthToken';\nimport Routes from './utils/Routes';\n\nif (localStorage.token) {\n\tsetAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\tuseEffect(() => {\n\t\tstore.dispatch(loadUser());\n\t}, []);\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Router>\n\t\t\t\t<div style={{ background: '#eceff1' }}>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Landing} />\n\t\t\t\t\t\t<Route component={Routes} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}